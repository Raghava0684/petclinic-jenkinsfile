pipeline {
    agent any
    
    tools {
        jdk 'jdk11'
        maven 'maven3'
    }
    
    environment {
       SCANNER_HOME = tool 'sonar-scanner'
   }
   

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/Raghava0684/Petclinic-Project-2.git'
            }
        }
        
        stage('Mvn Validate') {
            steps {
                sh 'mvn validate'
            }
        }
        
        
        stage('Mvn Test') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('SonaQube-Analysis') {
           steps {
            withSonarQubeEnv('sonar-scanner') {
            sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=petclinic \
	             -Dsonar.java.binaries=. \
	                -Dsonar.projectKey=Petclinic '''
                }
            
            }
        }
        
        stage('Mvn Package') {
            steps {
                sh 'mvn clean package'
            }
        }
        
        stage('Owasp Dependency Check') {
           steps {
                dependencyCheck additionalArguments: '--scan target/', odcInstallation: 'dp'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Artifacts upload to Nexus') {
            steps {
                configFileProvider([configFile(fileId: '53b5d7f0-8e53-4bfb-a057-777f9ca7b1d3', variable: 'mavenvar')]) {
                    
                    sh 'mvn -s $mavenvar clean deploy -DskipTests=true'
                }
            }
        }
        
        stage('Docker Image Build') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dc8696d3-0eac-458c-b83a-d8a57bd45b42', toolName: 'docker') {
                   
                        sh " docker build -t petclinic ."
                    }
                }
            }
        }
        
        stage('Docker Image Tag') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dc8696d3-0eac-458c-b83a-d8a57bd45b42', toolName: 'docker') {
                   
                        sh " docker tag petclinic raghava017/petclinic:latest"
                    }
                }
            }
        }
        
        stage('Docker Image Push  to Docker Hub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dc8696d3-0eac-458c-b83a-d8a57bd45b42', toolName: 'docker') {
                   
                        sh "docker push raghava017/petclinic:latest"
                    }
                }
            }
        }
        
        stage('Deploy to Tomcat-Server') {
            steps {
                sh 'sudo cp /root/.jenkins/workspace/Petclinic-Project/target/*.war  /opt/apache-tomcat-9.0.65/webapps/'
           }
        }
        
        
        
        
        
    }
}
